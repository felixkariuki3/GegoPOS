<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAFAAAABQCAYAAACOEfKtAAAABGdBTUEAALGPC/xhBQAAA5ZJREFUeF7t
        nIut1DAQRbcESqAEOoAOoAPoADqADqADXgePDqAD6AA6gA5gjoQly5pJnPi3GftIV4qSjWPPju3xJ7kt
        FovFYuGF56K3oveij6Kv/8Ux516KnogWEa9Fj6Lfor+Z+ix6KpqaV6KfIs1AOcLgb0TTQRWkWmpGOSO8
        kao9BRjvu0gzRKnwZrzaLS2NFwuPdMknkVbgFuJZrqDH1AraUi9EbngQaYVsKToqNxyJ8WrqmejyUJW0
        wvXQB9HloRBa4Xrom+jyjGj/gmg6Lg9eoBWuly7PMmAhy4CFLAMWsgxYyEgD/hBdnhUHFvJOpBWuh1yM
        REYO5VxMsDKRqhWuh9wsPP0SaQVsKRcdCOCBI6azWCPh2ZdnZCfiYtlzZBzITNDlGWlAF3HgSAO6WJ0b
        ORKh/b08IwNpF4tKMCIOdNH+BfAErZCt9EfkxvsCvaoy3u7OeIEePbK7fTExPUYlbr0PWm8yovq654tI
        K3wNuYj79mjVI+N9LmZfcmix2XKqDed4ChOemiHOyMWsy1FqjpFd7UbNpWZIM6UBgXardJxM9Z2m89Cg
        8FRnxq+agSwRDk3/ulcMxsjZjMlwcNoqG4MRtKrHeW3MTFW3DDddFQ7BNMudvK2pEdpHZMV4GJTXGUhn
        GiNSVdN1Yl4B07wLo2iGIQ1ekY3TYB14mjbRCqIxypYRMCbvwmn3utmJkIJBeOM89iSOrV6X85rXcc4K
        edJ7OOaZl/ZI2rb4vWC8K4Z2UDPi1o4qrqW/J410DjCu3uTBamfvjuBt1l6YdL8encPWdY10CJh2MNYQ
        kTzdrVeSKattSpUWOMzMEBjnEuYU9/4QS+T1LmaujxguCE9IM48h0jYs/g3H6fXUePzG8nxL5H2YR/J5
        kqMZDtrbekZYQ9oBjjlnQVpnP2BB2pSlG2Q2jcHOyDJI8Oh4ji8M8bimUeNTApRp60+tAg+okdmg1CDx
        FFdctTgO59M29GgTsiXK1tSINY0XxBeJIO4AtA4lXowKRqRXDedqyaoZxVjhQQtpsaAWA7ZS2kEVQw+n
        PaiFGG1YWCORFkojhSJy5ulqaWtrRovVPEtxJ1YEjar2gFay5vyAa9o9rVSlQ+mxnyXWHto9rVRlp0PP
        6puzKbLHDq+gKtW4Z4Zztqb1bAdz/tBdtIRbKSd86BlOxcPJ02gJt1JOm3NvbfIu/OO9lDMzwm+0e1tp
        sVgsFovFHXK7/QNwMd2viueGYgAAAABJRU5ErkJggg==
</value>
  </data>
</root>